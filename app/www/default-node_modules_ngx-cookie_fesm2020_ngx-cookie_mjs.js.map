{"version":3,"file":"default-node_modules_ngx-cookie_fesm2020_ngx-cookie_mjs.js","mappings":"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","sources":["./node_modules/ngx-cookie/fesm2020/ngx-cookie.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\nimport { APP_BASE_HREF, DOCUMENT } from '@angular/common';\n\nconst COOKIE_OPTIONS = new InjectionToken('COOKIE_OPTIONS');\nconst COOKIE_WRITER = new InjectionToken('COOKIE_WRITER');\n\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isPresent(obj) {\n    return !isNil(obj);\n}\nfunction isString(obj) {\n    return typeof obj === 'string';\n}\n// noinspection JSUnusedGlobalSymbols\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isEmpty(value) {\n    if (isNil(value)) {\n        return true;\n    }\n    if (value === {}) {\n        return true;\n    }\n    if (isString(value) && value.length === 0) {\n        return true;\n    }\n    if (Array.isArray(value) && value.length === 0) {\n        return true;\n    }\n    if (typeof value !== 'boolean' && !value) {\n        return true;\n    }\n    // noinspection RedundantIfStatementJS\n    if (typeof value === 'object' && Object.keys(value).length === 0 && value.constructor === Object) {\n        return true;\n    }\n    return false;\n}\nfunction mergeOptions(oldOptions, newOptions) {\n    if (!newOptions) {\n        return oldOptions;\n    }\n    return {\n        path: isPresent(newOptions.path) ? newOptions.path : oldOptions.path,\n        domain: isPresent(newOptions.domain) ? newOptions.domain : oldOptions.domain,\n        expires: isPresent(newOptions.expires) ? newOptions.expires : oldOptions.expires,\n        secure: isPresent(newOptions.secure) ? newOptions.secure : oldOptions.secure,\n        sameSite: isPresent(newOptions.sameSite) ? newOptions.sameSite : oldOptions.sameSite,\n        httpOnly: isPresent(newOptions.httpOnly) ? newOptions.httpOnly : oldOptions.httpOnly,\n        storeUnencoded: isPresent(newOptions.storeUnencoded) ? newOptions.storeUnencoded : oldOptions.storeUnencoded\n    };\n}\nfunction parseCookieString(currentCookieString) {\n    let lastCookies = {};\n    let lastCookieString = '';\n    let cookieArray;\n    let cookie;\n    let i;\n    let index;\n    let name;\n    if (currentCookieString !== lastCookieString) {\n        lastCookieString = currentCookieString;\n        cookieArray = lastCookieString.split(';');\n        lastCookies = {};\n        for (i = 0; i < cookieArray.length; i++) {\n            cookie = cookieArray[i];\n            index = cookie.indexOf('=');\n            if (index > 0) { // ignore nameless cookies\n                name = safeDecodeURIComponent((cookie.substring(0, index)).trim());\n                // the first value that is seen for a cookie is the most\n                // specific one.  values for the same cookie name that\n                // follow are for less specific paths.\n                if (isNil((lastCookies)[name])) {\n                    lastCookies[name] = safeDecodeURIComponent((cookie.substring(index + 1)).trim());\n                }\n            }\n        }\n    }\n    return lastCookies;\n}\nfunction buildCookieString(name, value, options) {\n    let expires = options?.expires;\n    let val;\n    if (isNil(value)) {\n        expires = 'Thu, 01 Jan 1970 00:00:00 GMT';\n        val = '';\n    }\n    else {\n        val = value;\n    }\n    if (isString(expires)) {\n        expires = new Date(expires);\n    }\n    const cookieValue = options?.storeUnencoded ? value : encodeURIComponent(val);\n    let str = encodeURIComponent(name) + '=' + cookieValue;\n    str += options?.path ? ';path=' + options.path : '';\n    str += options?.domain ? ';domain=' + options.domain : '';\n    str += expires ? ';expires=' + expires.toUTCString() : '';\n    str += options?.sameSite ? '; SameSite=' + options.sameSite : '';\n    str += options?.secure ? ';secure' : '';\n    str += options?.httpOnly ? '; HttpOnly' : '';\n    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n    // - 300 cookies\n    // - 20 cookies per unique domain\n    // - 4096 bytes per cookie\n    const cookieLength = str.length + 1;\n    if (cookieLength > 4096) {\n        console.log('Cookie \\'' + name + '\\' possibly not set or overflowed because it was too large (' + cookieLength + ' > 4096 bytes)!');\n    }\n    return str;\n}\nfunction safeDecodeURIComponent(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n\nclass CookieOptionsProvider {\n    constructor(options = {}, injector) {\n        this.injector = injector;\n        this.defaultOptions = {\n            path: this.injector.get(APP_BASE_HREF, '/'),\n            domain: undefined,\n            expires: undefined,\n            secure: false,\n            httpOnly: false\n        };\n        this.options = mergeOptions(this.defaultOptions, options);\n    }\n}\nCookieOptionsProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieOptionsProvider, deps: [{ token: COOKIE_OPTIONS }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nCookieOptionsProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieOptionsProvider });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieOptionsProvider, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [COOKIE_OPTIONS]\n                }] }, { type: i0.Injector }]; } });\n\nclass CookieService {\n    constructor(document, optionsProvider, cookieWriterService) {\n        this.document = document;\n        this.optionsProvider = optionsProvider;\n        this.cookieWriterService = cookieWriterService;\n        this.options = this.optionsProvider.options;\n    }\n    /**\n     * @description\n     * Returns if the given cookie key exists or not.\n     *\n     * @param key Id to use for lookup.\n     * @returns true if key exists, otherwise false.\n     */\n    hasKey(key) {\n        const value = this.get(key);\n        return isPresent(value);\n    }\n    /**\n     * @description\n     * Returns the value of given cookie key.\n     *\n     * @param key Id to use for lookup.\n     * @returns Raw cookie value.\n     */\n    get(key) {\n        return this.getAll()?.[key];\n    }\n    /**\n     * @description\n     * Returns the deserialized value of given cookie key.\n     *\n     * @param key Id to use for lookup.\n     * @returns Deserialized cookie value.\n     */\n    getObject(key) {\n        const value = this.get(key);\n        if (isNil(value)) {\n            return undefined;\n        }\n        else if (value === '') {\n            return {};\n        }\n        return JSON.parse(value);\n    }\n    /**\n     * @description\n     * Returns a key value object with all the cookies.\n     *\n     * @returns All cookies\n     */\n    getAll() {\n        const cookieString = this.cookieWriterService.readAllAsString();\n        return parseCookieString(cookieString);\n    }\n    /**\n     * @description\n     * Sets a value for given cookie key.\n     *\n     * @param key Id for the `value`.\n     * @param value Raw value to be stored.\n     * @param options (Optional) Options object.\n     */\n    put(key, value, options) {\n        const opts = mergeOptions(this.options, options);\n        this.cookieWriterService.write(key, value, opts);\n    }\n    /**\n     * @description\n     * Serializes and sets a value for given cookie key.\n     *\n     * @param key Id for the `value`.\n     * @param value Value to be stored.\n     * @param options (Optional) Options object.\n     */\n    putObject(key, value, options) {\n        this.put(key, JSON.stringify(value), options);\n    }\n    /**\n     * @description\n     * Remove given cookie.\n     *\n     * @param key Id of the key-value pair to delete.\n     * @param options (Optional) Options object.\n     */\n    remove(key, options) {\n        this.put(key, undefined, options);\n    }\n    /**\n     * @description\n     * Remove all cookies.\n     */\n    removeAll(options) {\n        const cookies = this.getAll();\n        Object.keys(cookies).forEach(key => this.remove(key, options));\n    }\n}\nCookieService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieService, deps: [{ token: DOCUMENT }, { token: CookieOptionsProvider }, { token: COOKIE_WRITER }], target: i0.ɵɵFactoryTarget.Injectable });\nCookieService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: CookieOptionsProvider }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [COOKIE_WRITER]\n                }] }]; } });\n\nclass CookieWriterService {\n    constructor(document) {\n        this.document = document;\n    }\n    readAllAsString() {\n        return this.document.cookie || '';\n    }\n    write(name, value, options) {\n        this.document.cookie = buildCookieString(name, value, options);\n    }\n}\nCookieWriterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieWriterService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nCookieWriterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieWriterService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieWriterService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nfunction cookieServiceFactory(document, cookieOptionsProvider, cookieWriterService) {\n    return new CookieService(document, cookieOptionsProvider, cookieWriterService);\n}\n\nclass CookieModule {\n    /**\n     * Use this method in your root module to provide the CookieService\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: CookieModule,\n            providers: [\n                { provide: COOKIE_OPTIONS, useValue: options },\n                { provide: COOKIE_WRITER, useClass: CookieWriterService },\n                { provide: CookieService, useFactory: cookieServiceFactory, deps: [DOCUMENT, CookieOptionsProvider, COOKIE_WRITER] }\n            ]\n        };\n    }\n    /**\n     * @deprecated use `CookieModule.withOptions()` instead\n     * Use this method in your root module to provide the CookieService\n     */\n    static forRoot(options = {}) {\n        return this.withOptions(options);\n    }\n    /**\n     * @deprecated use `CookieModule.withOptions()` instead\n     * Use this method in your other (non root) modules to import the directive/pipe\n     */\n    static forChild(options = {}) {\n        return this.withOptions(options);\n    }\n}\nCookieModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCookieModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieModule });\nCookieModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieModule, providers: [CookieOptionsProvider] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: CookieModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [CookieOptionsProvider]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-cookie\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COOKIE_OPTIONS, COOKIE_WRITER, CookieModule, CookieOptionsProvider, CookieService, CookieWriterService, buildCookieString, cookieServiceFactory, isEmpty, isNil, isPresent, isString, mergeOptions, parseCookieString, safeDecodeURIComponent };\n"],"names":["i0","InjectionToken","Injectable","Inject","NgModule","APP_BASE_HREF","DOCUMENT","COOKIE_OPTIONS","COOKIE_WRITER","isNil","obj","undefined","isPresent","isString","isEmpty","value","length","Array","isArray","Object","keys","constructor","mergeOptions","oldOptions","newOptions","path","domain","expires","secure","sameSite","httpOnly","storeUnencoded","parseCookieString","currentCookieString","lastCookies","lastCookieString","cookieArray","cookie","i","index","name","split","indexOf","safeDecodeURIComponent","substring","trim","buildCookieString","options","val","Date","cookieValue","encodeURIComponent","str","toUTCString","cookieLength","console","log","decodeURIComponent","e","CookieOptionsProvider","injector","defaultOptions","get","ɵfac","CookieOptionsProvider_Factory","__ngFactoryType__","ɵɵinject","Injector","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","decorators","args","CookieService","document","optionsProvider","cookieWriterService","hasKey","key","getAll","getObject","JSON","parse","cookieString","readAllAsString","put","opts","write","putObject","stringify","remove","removeAll","cookies","forEach","CookieService_Factory","CookieWriterService","CookieWriterService_Factory","cookieServiceFactory","cookieOptionsProvider","CookieModule","withOptions","ngModule","providers","provide","useValue","useClass","useFactory","deps","forRoot","forChild","CookieModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}